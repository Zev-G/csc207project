Index: src/main/java/view/InteractiveMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport game.DistanceCalculator;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\n\r\npublic class InteractiveMap extends JPanel {\r\n\r\n    private ImageIcon map;\r\n\r\n    private double[] target;\r\n\r\n    private boolean displayTarget = false;\r\n\r\n    private boolean isSelected = false;\r\n\r\n    private double[] chosenCoord = new double[2];\r\n\r\n    private double[] mapLocation;\r\n\r\n    public InteractiveMap(ImageIcon map, double[] mapLocation) {\r\n        this.map = map;\r\n        this.mapLocation = mapLocation;\r\n        addMouseListener(\r\n                new MouseAdapter() {\r\n                    @Override\r\n                    public void mouseClicked(MouseEvent e) {\r\n                        if (!isSelected) {\r\n                            isSelected = true;\r\n                        }\r\n                        double size = Math.max(getHeight(), getWidth());\r\n                        double yRatio = e.getY() / size;\r\n                        double xRatio = e.getX() / size;\r\n                        chosenCoord[0] = (mapLocation[1] - mapLocation[0]) * yRatio + mapLocation[0];\r\n                        chosenCoord[1] = (mapLocation[3] - mapLocation[2]) * xRatio + mapLocation[2];\r\n                        paintComponent(getGraphics());\r\n                        System.out.println(chosenCoord[0] + \" \" + chosenCoord[1]);\r\n                    }\r\n                }\r\n        );\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        int length = Math.max(getHeight(), getWidth());\r\n        g.drawImage(map.getImage(), 0, 0, length, length, this);\r\n        if (isSelected) {\r\n            double xRatio = (chosenCoord[1] - mapLocation[2]) / (mapLocation[3] - mapLocation[2]);\r\n            double yRatio = 1 + (chosenCoord[0] - mapLocation[1]) / (mapLocation[1] - mapLocation[0]);\r\n            double size = Math.max(getHeight(), getWidth());\r\n            g.fillOval((int) (size * xRatio - 5), (int) (size * yRatio - 5), 10, 10);\r\n        }\r\n        if (displayTarget) {\r\n            g.setColor(new Color(255, 0, 0));\r\n            double xRatio = (target[1] - mapLocation[2]) / (mapLocation[3] - mapLocation[2]);\r\n            double yRatio = 1 + (target[0] - mapLocation[1]) / (mapLocation[1] - mapLocation[0]);\r\n            double size = Math.max(getHeight(), getWidth());\r\n            g.fillOval((int) (size * xRatio - 5), (int) (size * yRatio - 5), 10, 10);\r\n\r\n        }\r\n    }\r\n\r\n    public double[] getChosenCoord() {\r\n        return chosenCoord;\r\n    }\r\n\r\n    public void setTarget(double[] t) {\r\n        target = t;\r\n    }\r\n\r\n    public void setDisplayTarget(boolean displayTarget) {\r\n        this.displayTarget = displayTarget;\r\n        paintComponent(getGraphics());\r\n    }\r\n\r\n    public double getDistance() {\r\n        return DistanceCalculator.calculate(target, chosenCoord);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        JFrame frame = new JFrame(\"Interactive Map\");\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        InteractiveMap map = new InteractiveMap(new ImageIcon(ClassLoader.getSystemResource(\"photos/UofTmap.jpg\")),\r\n                new double[]{43.66997811270511, 43.657184780883696, -79.40326917196147, -79.3848918572115});\r\n        frame.setContentPane(map);\r\n        frame.setSize(500, 500);\r\n        frame.setVisible(true);\r\n        map.setTarget(new double[]{43.65984277958618, -79.39718377820866});\r\n        map.setDisplayTarget(true);\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/main/java/view/InteractiveMap.java b/src/main/java/view/InteractiveMap.java
--- a/src/main/java/view/InteractiveMap.java	
+++ b/src/main/java/view/InteractiveMap.java	
@@ -52,7 +52,7 @@
             double xRatio = (chosenCoord[1] - mapLocation[2]) / (mapLocation[3] - mapLocation[2]);
             double yRatio = 1 + (chosenCoord[0] - mapLocation[1]) / (mapLocation[1] - mapLocation[0]);
             double size = Math.max(getHeight(), getWidth());
-            g.fillOval((int) (size * xRatio - 5), (int) (size * yRatio - 5), 10, 10);
+            g.fillOval((int) (size * xRatio - 5), (int)  (size * yRatio - 5), 10, 10);
         }
         if (displayTarget) {
             g.setColor(new Color(255, 0, 0));
